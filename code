// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {

    // Public variables to store the details about the token
    string public tokenName = "Hemant";
    string public tokenAbbrv = "Hs";
    uint256 public totalSupply = 100;

    // Mapping to store balances of each address
    mapping(address => uint256) public balances;

    // Event declarations for minting and burning tokens
    event Mint(address indexed to, uint256 value);
    event Burn(address indexed from, uint256 value);

    // Function to mint new tokens
    function mint(address to, uint256 value) public {
        totalSupply += value; // Increase the total supply
        balances[to] += value; // Increase the balance of the recipient address
        emit Mint(to, value); // Emit the mint event
    }

    // Function to burn tokens
    function burn(address from, uint256 value) public {
        require(balances[from] >= value, "Insufficient balance to burn"); // Check if the balance is sufficient
        totalSupply -= value; // Decrease the total supply
        balances[from] -= value; // Decrease the balance of the sender address
        emit Burn(from, value); // Emit the burn event
    }
}
